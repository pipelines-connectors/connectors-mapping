name: Publish using connectors mapping

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
      environment:
        required: true
        type: string
      repo-location:
        required: true
        type: string
      connectors-endpoint:
        required: true
        type: string
      command:
        required: true
        type: string
      email:                # pending to delete
        required: true
        type: string
      username:             # pending to delete
        required: true
        type: string
      metadata:
        required: true
        type: string
    secrets:
      cloud-access-token:
        required: false
      github-token:
        required: false
      connectors-token:
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      
      - name: print public variables
        run: |
          echo ${{ inputs.type }}
          echo ${{ inputs.environment }}
          echo ${{ inputs.repo-location }}
          echo ${{ inputs.connectors-endpoint }}
          echo ${{ inputs.command }}
          echo ${{ inputs.metadata }}

      - name: get mapping
        id: mapping
        run: |
          echo "repos=$(curl -s -X GET -H 'Accept: application/json' '${{ inputs.connectors-endpoint }}/connectors/mapping/retrieve/${{ inputs.type }}')" >> "$GITHUB_OUTPUT"
      
      - name: dispatch connectors
        run: |
          echo "connectors response ${{ steps.mapping.outputs.repos }}"
          curl --location --request POST '${{ inputs.connectors-endpoint }}/connectors/orchestrator/dispatch/${{ steps.mapping.outputs.repos }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{ "email": "${{ inputs.email }}", "username": "${{ inputs.username }}", "command": "${{ inputs.command }}", "repo-location": "${{ inputs.repo-location }}", "environment": "${{ inputs.environment }}", "type": "${{ inputs.type }}", "metadata": "${{ inputs.metadata }}", "cloud-access-token": "${{ secrets.cloud-access-token }}"}'